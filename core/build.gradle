import java.time.ZoneId
import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'


dependencies {
    implementation libs.json
    implementation libs.jackson
    implementation libs.unirest

    testImplementation libs.mockk
    testImplementation libs.kotlinjunit
    testImplementation libs.jupiter
    testImplementation libs.kotlin

    testRuntimeOnly libs.jupiterEngine
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
    afterTest { desc, result ->
        println "Executed test \"${desc.name} [${desc.className}]\" with result: \"${result.resultType}\""
    }
}

jar {
    enabled = true
}

shadowJar {
    zip64 true
    mergeServiceFiles()
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
    manifest {
        attributes 'Main-Class': 'neev.sdet.exam.ExaminationCLI'
    }
    archiveClassifier.set('main')
    archiveFileName.set('core-main.jar')
}

build {
    dependsOn shadowJar
}




